import requests
import json
import os
import time
from datetime import datetime
import textwrap
import getpass

class DeepSeekChat:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API DeepSeek Chat.
    """
    def __init__(self):
        self.base_url = "https://api.deepseek.com/v1/chat/completions"
        self.conversation_history = []
        self.message_count = 0
        self.api_key = None
        self.config_file = "deepseek_config.json"

    def load_api_key(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç API –∫–ª—é—á –∏–∑ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        try:
            if os.path.exists(self.config_file):
                with open(self.config_file, 'r', encoding='utf-8') as f:
                    config = json.load(f)
                    self.api_key = config.get('api_key')
                    return True
            return False
        except Exception as e:
            print(f"\033[1;33m‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: {e}\033[0m")
            return False

    def save_api_key(self, api_key):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç API –∫–ª—é—á –≤ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        try:
            config = {
                'api_key': api_key,
                'last_updated': datetime.now().isoformat()
            }
            with open(self.config_file, 'w', encoding='utf-8') as f:
                json.dump(config, f, ensure_ascii=False, indent=2)
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É
            os.chmod(self.config_file, 0o600)
            return True
        except Exception as e:
            print(f"\033[1;31m‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ API –∫–ª—é—á–∞: {e}\033[0m")
            return False

    def get_api_key_from_user(self):
        """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç API –∫–ª—é—á —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        self.clear_screen()
        self.print_header()
        
        print("\033[1;36m" + "üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–∞ DeepSeek" + "\033[0m")
        print("\033[1;37m" + "‚ïê" * 50 + "\033[0m")
        print()
        print("\033[1;33müìù –î–ª—è —Ä–∞–±–æ—Ç—ã —Å DeepSeek Chat –Ω–µ–æ–±—Ö–æ–¥–∏–º API –∫–ª—é—á.")
        print("   –ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –º–æ–∂–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É:")
        print("   \033[1;36mhttps://platform.deepseek.com/api_keys\033[1;33m")
        print()
        print("üí° –ö–ª—é—á –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –±—É–¥—É—â–∏—Ö —Å–µ—Å—Å–∏–π.")
        print("üîí –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã –∏ —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.")
        print()
        
        while True:
            try:
                api_key = getpass.getpass("\033[1;32müîê –í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á: \033[0m").strip()
                
                if not api_key:
                    print("\033[1;31m‚ùå API –∫–ª—é—á –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!\033[0m")
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞ (–æ–±—ã—á–Ω–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å sk-)
                if not api_key.startswith('sk-'):
                    print("\033[1;33m‚ö†Ô∏è  API –∫–ª—é—á –æ–±—ã—á–Ω–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'sk-'. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.\033[0m")
                    confirm = input("\033[1;33m–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å anyway? (y/N): \033[0m").strip().lower()
                    if confirm != 'y':
                        continue
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª—é—á
                print("\033[1;33m\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞...\033[0m")
                if self.test_api_key(api_key):
                    self.api_key = api_key
                    if self.save_api_key(api_key):
                        print("\033[1;32m‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!\033[0m")
                        time.sleep(1)
                    else:
                        print("\033[1;33m‚ö†Ô∏è  –ö–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –µ–≥–æ.\033[0m")
                    return True
                else:
                    print("\033[1;31m‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\033[0m")
                    retry = input("\033[1;33m–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞? (Y/n): \033[0m").strip().lower()
                    if retry == 'n':
                        return False
                    
            except KeyboardInterrupt:
                print("\n\n\033[1;33müö™ –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã...\033[0m")
                return False
            except Exception as e:
                print(f"\033[1;31m‚ùå –û—à–∏–±–∫–∞: {e}\033[0m")
                return False

    def test_api_key(self, api_key):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞"""
        try:
            headers = {
                "Authorization": f"Bearer {api_key}",
                "Content-Type": "application/json"
            }
            
            data = {
                "model": "deepseek-chat",
                "messages": [{"role": "user", "content": "test"}],
                "max_tokens": 5
            }
            
            response = requests.post(self.base_url, headers=headers, json=data, timeout=10)
            return response.status_code == 200
            
        except requests.exceptions.RequestException:
            return False
        except Exception:
            return False

    def clear_screen(self):
        """–û—á–∏—â–∞–µ—Ç —ç–∫—Ä–∞–Ω —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"""
        os.system('cls' if os.name == 'nt' else 'clear')

    def print_header(self):
        """–í—ã–≤–æ–¥–∏—Ç –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫"""
        header = """
‚¢†‚£∂‚£∂‚£æ‚£á‚†∞‚£ß‚£§‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚°ü‚†õ‚†ø‚£ø‚£ü‚¢∑‚£Ω‚†è‚†Å‚¢†‚†Ñ‚°á‚°§‚¢§‚¢Ä‚°§‚£Ñ‚£§‚†§‚°Ñ‚°§‚¢§‚¢†‚†§‚°Ñ‚£†‚¢§‚£∏‚°á‚°§
‚¢ø‚°Ä‚†Ä‚†ò‚£ø‚£æ‚°ø‚†Ä‚†Ä‚¢ª‚£§‚°á‚¢Ø‚£≠‚†π‚£¨‚°≠‚£ø‚£§‚†á‚£ù‚£ø‚†∏‚£¨‚°ç‚¢ß‚£≠‚¢Ω‚°ü‚£á
‚†à‚†ª‚£æ‚£∑‚°Æ‚†ø‚†∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
"""
        print("\033[1;36m" + header + "\033[0m")

    def print_footer(self):
        """–í—ã–≤–æ–¥–∏—Ç –Ω–∏–∂–Ω—é—é —á–∞—Å—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        footer = """
    ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    üí° –°–æ–≤–µ—Ç—ã: –í–≤–µ–¥–∏—Ç–µ 'clear' –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞, 'quit' –¥–ª—è –≤—ã—Ö–æ–¥–∞
               'newkey' –¥–ª—è —Å–º–µ–Ω—ã API –∫–ª—é—á–∞, 'menu' –¥–ª—è –º–µ–Ω—é
        """
        print("\033[1;35m" + footer + "\033[0m")

    def print_menu(self):
        """–í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
        menu = """
    üéõÔ∏è  –î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´:
    
    üîë newkey   - –°–º–µ–Ω–∏—Ç—å API –∫–ª—é—á
    üóëÔ∏è  clear    - –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞  
    üìä stats    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    üåÄ menu     - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é
    üö™ quit     - –í—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    
    ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        """
        print("\033[1;36m" + menu + "\033[0m")

    def print_stats(self):
        """–í—ã–≤–æ–¥–∏—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∏–∞–ª–æ–≥–∞"""
        stats = f"""
    üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –î–ò–ê–õ–û–ì–ê:
    
    üí¨ –°–æ–æ–±—â–µ–Ω–∏–π: {self.message_count // 2}
    üë§ –í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {len([m for m in self.conversation_history if m['role'] == 'user'])}
    ü§ñ –û—Ç–≤–µ—Ç–æ–≤ AI: {len([m for m in self.conversation_history if m['role'] == 'assistant'])}
       –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}
        """
        print("\033[1;35m" + stats + "\033[0m")

    def print_typing_animation(self):
        """–ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—á–∞—Ç–∏"""
        animations = [
            "üîÆ DeepSeek –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç",
            "üí´ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å", 
            "   –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–Ω—Ç–µ–∫—Å—Ç",
            "üåü –§–æ—Ä–º–∏—Ä—É—é –æ—Ç–≤–µ—Ç"
        ]
        
        import random
        animation_text = random.choice(animations)
        
        for i in range(3):
            print(f"\r\033[1;33m{animation_text}{'.' * (i + 1)}\033[0m", end="", flush=True)
            time.sleep(0.4)
        print("\r\033[1;33m" + " " * 50 + "\r", end="", flush=True)

    def format_message(self, message, role):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞"""
        width = 70
        
        if role == "user":
            color = "\033[1;32m"  # –ó–µ–ª–µ–Ω—ã–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            prefix = "üë§ –í–´"
            wrapper = textwrap.TextWrapper(
                width=width, 
                initial_indent=" " * 2, 
                subsequent_indent=" " * 2
            )
        else:
            color = "\033[1;34m"  # –°–∏–Ω–∏–π –¥–ª—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            prefix = "ü§ñ DEEPSEEK"
            wrapper = textwrap.TextWrapper(
                width=width, 
                initial_indent=" " * 2, 
                subsequent_indent=" " * 2
            )
        
        formatted_text = wrapper.fill(message)
        lines = formatted_text.split('\n')
        max_line_length = max(len(line) for line in lines)
        
        print(f"{color}‚ïî{'‚ïê' * (max_line_length + 4)}‚ïó\033[0m")
        print(f"{color}‚ïë {prefix:<{max_line_length + 2}} ‚ïë\033[0m")
        print(f"{color}‚ï†{'‚ïê' * (max_line_length + 4)}‚ï£\033[0m")
        
        for line in lines:
            padded_line = line.ljust(max_line_length)
            print(f"{color}‚ïë {padded_line}  ‚ïë\033[0m")
        
        print(f"{color}‚ïö{'‚ïê' * (max_line_length + 4)}‚ïù\033[0m")
        print()

    def send_message(self, message):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ API –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.
        """
        if not self.api_key:
            return "API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É 'newkey'."

        headers = {
            "Authorization": f"Bearer {self.api_key}",
            "Content-Type": "application/json"
        }
        
        self.conversation_history.append({"role": "user", "content": message})

        data = {
            "model": "deepseek-chat",
            "messages": self.conversation_history,
            "temperature": 0.7,
            "max_tokens": 1000
        }
        
        try:
            self.print_typing_animation()
            response = requests.post(self.base_url, headers=headers, json=data, timeout=30)
            response.raise_for_status()

            result = response.json()
            
            if not result.get("choices"):
                return "API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."
                
            assistant_message = result["choices"][0]["message"]["content"]
            self.conversation_history.append({"role": "assistant", "content": assistant_message})
            self.message_count += 2

            return assistant_message

        except requests.exceptions.Timeout:
            return "‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        except requests.exceptions.RequestException as e:
            return f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}"
        except KeyError as e:
            return f"–û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –æ—Ç–≤–µ—Ç–∞: {e}"
        except Exception as e:
            return f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}"

    def clear_chat(self):
        """–û—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞"""
        self.conversation_history.clear()
        self.message_count = 0
        print("\033[1;32m" + "üóëÔ∏è –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞!" + "\033[0m")
        time.sleep(1)

    def change_api_key(self):
        """–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–º–µ–Ω–∏—Ç—å API –∫–ª—é—á"""
        print("\033[1;33müîÑ –°–º–µ–Ω–∞ API –∫–ª—é—á–∞...\033[0m")
        if self.get_api_key_from_user():
            self.clear_chat()
            return True
        return False

    def get_user_input(self):
        """–ö—Ä–∞—Å–∏–≤—ã–π –≤–≤–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        prompt = "\033[1;32müí¨ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: \033[0m"
        try:
            user_input = input(prompt).strip()
            return user_input
        except KeyboardInterrupt:
            raise
        except Exception:
            return ""

    def initialize(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–æ–º API –∫–ª—é—á–∞"""
        self.clear_screen()
        self.print_header()
        
        print("\033[1;36m" + "üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ DeepSeek Chat..." + "\033[0m")
        time.sleep(1)
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π API –∫–ª—é—á
        if self.load_api_key():
            print("\033[1;32m   API –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\033[0m")
            time.sleep(1)
            return True
        else:
            print("\033[1;33müìù API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞.\033[0m")
            time.sleep(1)
            return self.get_api_key_from_user()

    def run(self):
        """
        –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
        """
        if not self.initialize():
            return

        self.clear_screen()
        self.print_header()
        print("\033[1;36m" + " –ì–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é! –í–≤–µ–¥–∏—Ç–µ 'menu' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥." + "\033[0m")
        print()

        while True:
            try:
                user_input = self.get_user_input()

                # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
                if user_input.lower() in ['quit', 'exit', '–≤—ã—Ö–æ–¥']:
                    self.clear_screen()
                    self.print_header()
                    print("\033[1;33m" + "üëã –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—â–µ–Ω–∏–µ! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞!" + "\033[0m")
                    break
                
                elif user_input.lower() in ['clear', '–æ—á–∏—Å—Ç–∏—Ç—å']:
                    self.clear_chat()
                    self.clear_screen()
                    self.print_header()
                    print("\033[1;36m" + "üí¨ –ß–∞—Ç –æ—á–∏—â–µ–Ω. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—â–µ–Ω–∏–µ!" + "\033[0m")
                    continue
                
                elif user_input.lower() in ['newkey', '–∫–ª—é—á']:
                    self.change_api_key()
                    self.clear_screen()
                    self.print_header()
                    print("\033[1;36m" + " –ö–ª—é—á –æ–±–Ω–æ–≤–ª–µ–Ω! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—â–µ–Ω–∏–µ." + "\033[0m")
                    continue
                
                elif user_input.lower() in ['menu', 'help', '–ø–æ–º–æ—â—å']:
                    self.clear_screen()
                    self.print_header()
                    self.print_menu()
                    continue
                
                elif user_input.lower() in ['stats', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞']:
                    self.clear_screen()
                    self.print_header()
                    self.print_stats()
                    self.print_footer()
                    continue
                
                elif not user_input:
                    continue

                # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ API
                self.format_message(user_input, "user")
                response = self.send_message(user_input)
                self.format_message(response, "assistant")
                self.print_footer()

            except KeyboardInterrupt:
                print("\n\n\033[1;33m" + "üëã –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!" + "\033[0m")
                break
            except Exception as e:
                print(f"\033[1;31m  –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}\033[0m")
                break

if __name__ == "__main__":
    chat = DeepSeekChat()
    chat.run()